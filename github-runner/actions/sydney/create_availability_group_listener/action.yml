name: create_availability_group_listener
description: invoke SQl to create availability group listener

inputs:
  name-prefix:
    description: 'Name prefix'
    required: false
    default: ''
  service:
    description: 'Service Name'
    required: false
    default: ''
  instance:
    description: 'DB instance name'
    required: true
  full-domain-name:
    description: 'Full domain name'
    required: true
  ag1-listener-ip-1:
    description: 'AG1 listener IP 1'
    required: true
  ag1-listener-ip-2:
    description: 'AG1 listener IP 2'
    required: true
  subnet-mask:
    description: 'Subnet mask for AG IPs'
    required: true
  primary-server:
    description: 'Hostname of Primary server in the cluster'
    required: true
  ag-name:
    description: "Availability Group Name"
    required: true

runs:
  using: "composite"
  steps:
    - name: Invoke SQL create AG1 listener
      run: |
        Import-Module dbatools -erroraction SilentlyContinue
        Set-DbatoolsConfig -FullName sql.connection.trustcert -Value $true -Register
        Set-DbatoolsConfig -FullName sql.connection.encrypt -Value $false -Register
        $listenerPort = (Get-DbaAgListener -SqlInstance ${{ inputs.primary-server }}.${{ inputs.full-domain-name }}\${{ inputs.instance }} -AvailabilityGroup ${{ inputs.ag-name }}).PortNumber
        if ($listenerPort -eq 1435) {
          Write-Host "Listener port for AG1 already exists"
        } else {
          Add-DbaAgListener -SqlInstance "${{ inputs.primary-server }}.${{ inputs.full-domain-name }}\${{ inputs.instance }}" -AvailabilityGroup "${{ inputs.ag-name }}" -Port 1435 -IPAddress ${{ inputs.ag1-listener-ip-1 }},${{ inputs.ag1-listener-ip-2 }} -SubnetMask ${{ inputs.subnet-mask}}
        }
      shell: powershell
