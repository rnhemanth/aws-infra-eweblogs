name: install_spinecert
description: Installation of Spine certificate

inputs:
  pd-number:
    description: 'pd-number eg:cm01'
    required: true
  spine-pass:
    description: 'Password for spine certificate'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Spine certificate
      run: |
        echo "Installing Spine certificate."
          pd=${{inputs.pd-number}}
          pdlower=${pd,,} 
        echo "${pdlower}"        
          commandId1=$(aws ssm send-command --document-name "ImportCertificates" --targets '[{"Key":"resource-groups:Name","Values":["'${pdlower}'-emis-web-apps"]}]' --parameters '{"pdCertKey":["patch_domains/awsen'${pdlower}'/"],"pfxhashtable":["@{'"'"'awsen'${pdlower}'.spine.emis.thirdparty.nhs.uk.pfx'"'"'='"'"'${{ inputs.spine-pass }}'"'"';'"'"'filename2'"'"'='"'"'password'"'"'}"]}' --query 'Command.CommandId' --output text)
          commandId2=$(aws ssm send-command --document-name "ImportCertificates" --targets '[{"Key":"resource-groups:Name","Values":["'${pdlower}'-emas-apps"]}]' --parameters '{"pdCertKey":["patch_domains/awsen'${pdlower}'/"],"pfxhashtable":["@{'"'"'awsen'${pdlower}'.spine.emis.thirdparty.nhs.uk.pfx'"'"'='"'"'${{ inputs.spine-pass }}'"'"';'"'"'filename2'"'"'='"'"'password'"'"'}"]}' --query 'Command.CommandId' --output text)
          command_status="starting"
          while [ $command_status != "Success" ]
          do
            echo "Spine certificate still installing"
            sleep 10
            command_status=$(aws ssm list-commands --command-id $commandId1 --query "Commands[].StatusDetails" --output text)
            if [ $command_status = "Failed" ]
            then
              echo "Spine certificate install failed"
              exit 1
            fi
          done
          echo "Spine certificate install complete"
      shell: bash
      working-directory: ./github-runner