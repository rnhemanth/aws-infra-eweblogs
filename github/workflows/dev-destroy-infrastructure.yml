name: DEV - Destroy - Infrastructure
on:
  workflow_dispatch:
    inputs:
      DESTROY:
        description: 'Resources to DESTROY (‚ö†Ô∏è DESTRUCTIVE OPERATION)'
        required: true
        type: choice
        options:
          - ec2
          - network-addons
          - network
          - all-infrastructure
      CONFIRMATION:
        description: 'Type "DESTROY" to confirm (case sensitive)'
        required: true
        type: string

concurrency: dev-destroy

permissions:
  id-token: write
  contents: read

env:
  ssh_key: ${{ secrets.ssh_key }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  DEPLOYER_ROLE_ARN: ${{ secrets.DEPLOYER_ROLE_ARN }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  ENVIRONMENT: ${{ vars.ENVIRONMENT }}
  DOMAIN_CREDENTIALS: ${{ secrets.DOMAIN_CREDENTIALS }}
  FULL_DOMAIN_NAME: ${{ secrets.FULL_DOMAIN_NAME }}

jobs:
  confirmation-check:
    name: Confirmation Check
    runs-on: ubuntu-latest
    steps:
      - name: Validate Confirmation
        run: |
          if [ "${{ github.event.inputs.CONFIRMATION }}" != "DESTROY" ]; then
            echo "‚ùå Invalid confirmation. You must type 'DESTROY' exactly to proceed."
            echo "You typed: '${{ github.event.inputs.CONFIRMATION }}'"
            exit 1
          fi
          echo "‚úÖ Confirmation validated"
      
      - name: Display Destruction Plan
        run: |
          echo "üö® DESTRUCTIVE OPERATION CONFIRMED üö®"
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo "Target: ${{ github.event.inputs.DESTROY }}"
          echo "Account: ${{ env.AWS_ACCOUNT_ID }}"
          echo "Region: ${{ env.AWS_REGION }}"

  destroy-ec2:
    name: Destroy - DEV EC2 Infrastructure
    if: |
      github.ref == 'refs/heads/develop' && 
      (github.event.inputs.DESTROY == 'ec2' || github.event.inputs.DESTROY == 'all-infrastructure')
    runs-on: ubuntu-latest
    needs: confirmation-check
    environment:
      name: dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYER_ROLE_ARN }}
          role-session-name: deploy-role-session
          aws-region: ${{ vars.AWS_REGION }}

      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.APP_ID }}

      - name: Pull & update submodules recursively
        run: |
          git config --global url.https://token:${{ steps.get-token.outputs.token }}@github.com/emisgroup.insteadOf https://github.com/emisgroup
          git config --file=.gitmodules github-runner.url https://token:${{ steps.get-token.outputs.token }}@github.com/emisgroup/github-runner.git
          git submodule update --init --recursive
        env:
          GI_TOKEN: ${{ steps.get-token.outputs.token }}

      - name: Run Checkov - EC2
        uses: bridgecrewio/checkov-action@master
        with:
          directory: eweblogs/terraform
          framework: terraform

      - name: Plan Destroy EC2
        env:
          GI_TOKEN: ${{ steps.get-token.outputs.token }}
        uses: ./github-runner/actions/terragrunt-plan-destroy
        with:
          terraform-folder: "../eweblogs/terraform"
          terragrunt-config: "../terragrunt.hcl"

      - name: Review Destroy Plan
        run: |
          echo "üîç REVIEW THE DESTROY PLAN ABOVE üîç"
          echo ""
          echo "The Terragrunt destroy plan has been generated."
          echo "Please review the plan output above to see exactly what will be destroyed."
          echo ""
          echo "‚ö†Ô∏è  If you want to STOP here and NOT destroy, cancel this workflow now!"
          echo "‚è≥ Waiting 30 seconds before proceeding with destruction..."
          echo ""
          sleep 30
          echo "‚úÖ Proceeding with destroy operation..."

      - name: Destroy EC2 Infrastructure
        env:
          GI_TOKEN: ${{ steps.get-token.outputs.token }}
        uses: ./github-runner/actions/terragrunt-destroy
        with:
          terraform-folder: "../eweblogs/terraform"
          terragrunt-config: "../terragrunt.hcl"

  destroy-network-addons:
    name: Destroy - DEV Network Addons
    if: |
      github.ref == 'refs/heads/develop' && 
      (github.event.inputs.DESTROY == 'network-addons' || github.event.inputs.DESTROY == 'all-infrastructure') &&
      always() && 
      (needs.destroy-ec2.result == 'success' || needs.destroy-ec2.result == 'skipped')
    runs-on: ubuntu-latest
    needs: [confirmation-check, destroy-ec2]
    environment:
      name: dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYER_ROLE_ARN }}
          role-session-name: destroy-role-session
          aws-region: ${{ vars.AWS_REGION }}

      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.APP_ID }}

      - name: Pull & update submodules recursively
        run: |
          git config --global url.https://token:${{ steps.get-token.outputs.token }}@github.com/emisgroup.insteadOf https://github.com/emisgroup
          git config --file=.gitmodules github-runner.url https://token:${{ steps.get-token.outputs.token }}@github.com/emisgroup/github-runner.git
          git submodule update --init --recursive
        env:
          GI_TOKEN: ${{ steps.get-token.outputs.token }}

      - name: Run Checkov - Addons
        uses: bridgecrewio/checkov-action@master
        with:
          directory: eweblogs/terraform/addons
          framework: terraform

      - name: Plan Destroy Network Addons
        env:
          GI_TOKEN: ${{ steps.get-token.outputs.token }}
        uses: ./github-runner/actions/terragrunt-plan-destroy
        with:
          terraform-folder: "../eweblogs/terraform/addons"
          terragrunt-config: "./terragrunt.hcl"

      - name: Review Network Addons Destroy Plan
        run: |
          echo "üîç REVIEW THE NETWORK ADDONS DESTROY PLAN ABOVE üîç"
          echo "‚è≥ Waiting 15 seconds before proceeding..."
          sleep 15
          echo "‚úÖ Proceeding with network addons destroy..."

      - name: Destroy Network Addons
        env:
          GI_TOKEN: ${{ steps.get-token.outputs.token }}
        uses: ./github-runner/actions/terragrunt-destroy
        with:
          terraform-folder: "../eweblogs/terraform/addons"
          terragrunt-config: "./terragrunt.hcl"

  destroy-network:
    name: Destroy - DEV Network Infrastructure
    if: |
      github.ref == 'refs/heads/develop' && 
      (github.event.inputs.DESTROY == 'network' || github.event.inputs.DESTROY == 'all-infrastructure') &&
      always() && 
      (needs.destroy-network-addons.result == 'success' || needs.destroy-network-addons.result == 'skipped')
    runs-on: ubuntu-latest
    needs: [confirmation-check, destroy-ec2, destroy-network-addons]
    environment:
      name: dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYER_ROLE_ARN }}
          role-session-name: destroy-role-session
          aws-region: ${{ vars.AWS_REGION }}

      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.APP_ID }}

      - name: Pull & update submodules recursively
        run: |
          git config --global url.https://token:${{ steps.get-token.outputs.token }}@github.com/emisgroup.insteadOf https://github.com/emisgroup
          git config --file=.gitmodules github-runner.url https://token:${{ steps.get-token.outputs.token }}@github.com/emisgroup/github-runner.git
          git submodule update --init --recursive
        env:
          GI_TOKEN: ${{ steps.get-token.outputs.token }}

      - name: Run Checkov - Network
        uses: bridgecrewio/checkov-action@master
        with:
          directory: eweblogs/terraform/network
          framework: terraform

      - name: Plan Destroy Network
        env:
          GI_TOKEN: ${{ steps.get-token.outputs.token }}
        uses: ./github-runner/actions/terragrunt-plan-destroy
        with:
          terraform-folder: "../eweblogs/terraform/network"
          terragrunt-config: "./terragrunt.hcl"

      - name: Review Network Destroy Plan
        run: |
          echo "üîç REVIEW THE NETWORK DESTROY PLAN ABOVE üîç"
          echo "‚ö†Ô∏è  This will destroy ALL network infrastructure!"
          echo "‚è≥ Waiting 20 seconds before proceeding..."
          sleep 20
          echo "‚úÖ Proceeding with network destroy..."

      - name: Destroy Network Infrastructure
        env:
          GI_TOKEN: ${{ steps.get-token.outputs.token }}
        uses: ./github-runner/actions/terragrunt-destroy
        with:
          terraform-folder: "../eweblogs/terraform/network"
          terragrunt-config: "./terragrunt.hcl"

  completion-summary:
    name: Destruction Summary
    if: always()
    runs-on: ubuntu-latest
    needs: [confirmation-check, destroy-ec2, destroy-network-addons, destroy-network]
    steps:
      - name: Destruction Summary
        run: |
          echo "üö® DESTRUCTION OPERATION COMPLETED üö®"
          echo ""
          echo "Target: ${{ github.event.inputs.DESTROY }}"
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo ""
          echo "Results:"
          echo "- EC2 Destruction: ${{ needs.destroy-ec2.result }}"
          echo "- Network Addons Destruction: ${{ needs.destroy-network-addons.result }}"
          echo "- Network Destruction: ${{ needs.destroy-network.result }}"
          echo ""
          if [ "${{ github.event.inputs.DESTROY }}" == "all-infrastructure" ]; then
            echo "‚ö†Ô∏è ALL INFRASTRUCTURE HAS BEEN DESTROYED"
          else
            echo "‚úÖ Selected components destroyed: ${{ github.event.inputs.DESTROY }}"
          fi